[!unix] skip 'this procedure can only work on Unix systems'
env HOME={{.Home}}
env TMPDIR={{.TmpDir}}
env sb_dir=$HOME/sandboxes/rsandbox_{{.DbPathVer}}_semi

[!minimum_version_for_semisync:$db_version:{{.DbFlavor}}] skip 'minimum version for Semi synchronous not met'
! exists $sb_dir

#deployment

exec dbdeployer deploy replication --concurrent {{.DbVersion}} --semi-sync --base-port=17000 --sandbox-directory=rsandbox_{{.DbPathVer}}_semi
stdout 'Replication directory installed in .*/sandboxes/rsandbox_{{.DbPathVer}}_semi'
stdout 'initializing slave 1'
stdout 'initializing slave 2'
! stderr .

exists $sb_dir

cleanup_at_end $sb_dir

# check files and ports

check_file $sb_dir check_slaves exec_all_slaves metadata_all s1 start_all sysbench_ready use_all_masters
check_file $sb_dir clear_all initialize_slaves n1 s2 status_all test_replication use_all_slaves
check_file $sb_dir exec_all m n2 replicate_from sbdescription.json stop_all test_sb_all wipe_and_restart_all
check_file $sb_dir exec_all_masters n3 restart_all send_kill_all sysbench use_all

check_file $sb_dir/master start stop status clear
check_file $sb_dir/master add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir/master sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir/master replicate_from send_kill sysbench use
check_file $sb_dir/master metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir/master connection.conf grants.mysql my sb_include show_log test_sb
check_file $sb_dir/master/data msandbox.err

check_file $sb_dir/node1 start stop status clear
check_file $sb_dir/node1 add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir/node1 sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir/node1 replicate_from send_kill sysbench use
check_file $sb_dir/node1 metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir/node1 connection.conf grants.mysql my sb_include show_log test_sb
check_file $sb_dir/node1/data msandbox.err

check_file $sb_dir/node2 start stop status clear
check_file $sb_dir/node2 add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir/node2 sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir/node2 replicate_from send_kill sysbench use
check_file $sb_dir/node2 metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir/node2 connection.conf grants.mysql my sb_include show_log test_sb
check_file $sb_dir/node2/data msandbox.err

env required_ports=3
[version_is_at_least:$db_version:8.0.0] env required_ports=6
check_ports $sb_dir $required_ports

# test replication

[version_is_at_least:$db_version:5.6.0] ! find_errors $sb_dir/master
[version_is_at_least:$db_version:5.6.0] ! find_errors $sb_dir/node1
[version_is_at_least:$db_version:5.6.0] ! find_errors $sb_dir/node2
exec $sb_dir/test_replication
stdout '# failed:     0'
! stderr .

# test semi-synchronous operations

exec $sb_dir/m -e 'show global status like "Rpl_semi_sync_master_status" '
stdout 'Rpl_semi_sync_master_status.*ON'
! stderr .

exec $sb_dir/s1 -e 'show global status like "Rpl_semi_sync_slave_status" '
stdout 'Rpl_semi_sync_slave_status.*ON'
! stderr .

exec $sb_dir/m -e 'show global status like "Rpl_semi_sync_master_yes_tx" '
stdout 'Rpl_semi_sync_master_yes_tx[^0-9]+[0-9]+'
! stdout '\b0\b'
! stderr .

exec $sb_dir/m -e 'show global status like "Rpl_semi_sync_master_no_tx" '
stdout 'Rpl_semi_sync_master_no_tx[^0-9]+0'
! stderr .

[version_is_at_least:$db_version:5.6.0] ! find_errors $sb_dir/master
[version_is_at_least:$db_version:5.6.0] ! find_errors $sb_dir/node1
[version_is_at_least:$db_version:5.6.0] ! find_errors $sb_dir/node2

# sandbox cleanup
exec dbdeployer delete rsandbox_{{.DbPathVer}}_semi
stdout 'sandboxes/rsandbox_{{.DbPathVer}}_semi'
! stderr .
! exists $sb_dir