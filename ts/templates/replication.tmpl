env HOME={{.Home}}
env TMPDIR={{.TmpDir}}
env sb_dir=$HOME/sandboxes/rsandbox_{{.DbPathVer}}

[!exec:dbdeployer] skip 'dbdeployer executable not found'
! exists $sb_dir

exec dbdeployer deploy replication --concurrent {{.DbVersion}}
stdout 'Replication directory installed in .*/sandboxes/rsandbox_{{.DbPathVer}}'
stdout 'initializing slave 1'
stdout 'initializing slave 2'
! stderr .

check_file $sb_dir check_slaves exec_all_slaves metadata_all s1 start_all sysbench_ready use_all_masters
check_file $sb_dir clear_all initialize_slaves n1 s2 status_all test_replication use_all_slaves
check_file $sb_dir exec_all m n2 replicate_from sbdescription.json stop_all test_sb_all wipe_and_restart_all
check_file $sb_dir exec_all_masters n3 restart_all send_kill_all sysbench use_all

check_file $sb_dir/master start stop status clear
check_file $sb_dir/master add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir/master sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir/master replicate_from send_kill sysbench use
check_file $sb_dir/master metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir/master connection.conf grants.mysql my sb_include show_log test_sb

check_file $sb_dir/node1 start stop status clear
check_file $sb_dir/node1 add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir/node1 sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir/node1 replicate_from send_kill sysbench use
check_file $sb_dir/node1 metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir/node1 connection.conf grants.mysql my sb_include show_log test_sb

check_ports $sb_dir 3

exec $HOME/sandboxes/rsandbox_{{.DbPathVer}}/test_replication
stdout '# failed:     0'
! stderr .

! find_errors $sb_dir/master
! find_errors $sb_dir/node1
! find_errors $sb_dir/node2

exec dbdeployer delete rsandbox_{{.DbPathVer}}
stdout 'sandboxes/rsandbox_{{.DbPathVer}}'
! stderr .
